.mask-hole {
  mask-image: radial-gradient(
    circle at center,
    transparent 0%,
    transparent 80px,
    black 120px
  );
  -webkit-mask-image: radial-gradient(
    circle at center,
    transparent 0%,
    transparent 80px,
    black 120px
  );
  mask-composite: exclude;
  -webkit-mask-composite: destination-out;
}

@keyframes spotlight-spin {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

.animate-spotlight-spin {
  animation: spotlight-spin 60s linear infinite;
}

@keyframes fade-pop {
  0% {
    opacity: 0.1;
    transform: scale(0.2) translateY(-200px);
  }

  100% {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

.animate-fade-pop-quick {
  animation: fade-pop 0.2s ease-out forwards;
}

.animate-fade-pop-delay-1 {
  animation: fade-pop 0.3s ease-out forwards;
  animation-delay: 0.15s;
}

.animate-fade-pop-delay2 {
  animation: fade-pop 0.3s ease-out forwards;
  animation-delay: 0.3s;
}

.animate-fade-pop-delay3 {
  animation: fade-pop 0.3s ease-out forwards;
  animation-delay: 0.45s;
}

.animate-fade-pop-delay4 {
  animation: fade-pop 0.3s ease-out forwards;
  animation-delay: 0.6s;
}

/* Flash Pulses on answering correctly / wrong */

@keyframes flashFade {
  0% {
    opacity: 0;
  }
  20% {
    opacity: 1;
  }
  80% {
    opacity: 0;
  }
  100% {
    opacity: 0;
  }
}

.sliding-bg {
  animation: slide 5s ease-in-out infinite alternate;
  background-image: linear-gradient(-60deg, #6c3 50%, #09f 50%);
  bottom: 0;
  left: -50%;
  opacity: 0.5;
  position: fixed;
  right: -50%;
  top: 0;
  position: fixed;
  z-index: 0;
}

.bg2 {
  animation-direction: alternate-reverse;
  animation-duration: 6s;
}

.bg3 {
  animation-duration: 8s;
}

@keyframes slide {
  0% {
    transform: translateX(-25%);
  }
  100% {
    transform: translateX(25%);
  }
}

/* GRID BACKGROUND */
@property --line-step {
  syntax: "<length>";
  inherits: false;
  initial-value: 280px;
}
@property --grid-weight {
  syntax: "<length>";
  inherits: false;
  initial-value: 20px;
}

/* =========  Theme variables  ========= */
/* Putting them on :root makes them available anywhere in the app.              */
/* If you only need them inside .space-grid-bg you can copy them there instead. */
:root {
  --line-step: 180px; /* distance between grid lines          */
  --grid-weight: 20px; /* thickness of each grid line          */
  --line-color: #ffffff; /* grid colour                          */
}

/* =========  Grid background component  ========= */
.space-grid-bg {
  position: fixed;
  inset: 0;
  z-index: -1;
  pointer-events: none;

  /* radial sky behind the two grid layers */
  background: repeating-linear-gradient(
      to bottom,
      transparent 0 calc(var(--line-step) - var(--grid-weight)),
      var(--line-color) calc(var(--line-step) - var(--grid-weight))
        var(--line-step)
    ),
    repeating-linear-gradient(
      to right,
      transparent 0 calc(var(--line-step) - var(--grid-weight)),
      var(--line-color) calc(var(--line-step) - var(--grid-weight))
        var(--line-step)
    ),
    radial-gradient(ellipse at bottom, #d2fff19a 0%, #e1e5ff89 100%);

  /* animate the size of the squares */
  animation: grid-pulse 120s ease-in-out infinite;
}

/* The grid gradually “breathes” between two sizes   */
@keyframes grid-pulse {
  0%,
  100% {
    --line-step: 180px;
    --grid-weight: 0px;
  }
  50% {
    --line-step: 120px;
    --grid-weight: 30px;
  }
}
